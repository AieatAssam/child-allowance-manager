@page "/admin"
@using ChildAllowanceManager.Common.Models
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
<PageTitle>Administration</PageTitle>

<MudText Typo="Typo.h2">Administration</MudText>

<MudTabs>
    <MudTabPanel Icon="@Icons.Material.Filled.People" Text="Tenants" BadgeData="Tenants?.Count()">
        <MudPaper Class="ma-4 pa-3" Elevation="10">
            <MudToolBar>
                <MudText Typo="Typo.subtitle1">Tenant Management</MudText>
                <MudSpacer/>
                <MudIconButton Icon="@Icons.Material.Outlined.Add" OnClick="() => AddingTenant = true"/>
            </MudToolBar>

            @if (Tenants == null)
            {
                <MudProgressCircular Color="Color.Default" Indeterminate="true"/>
            }
            else if (Tenants.Any() || AddingTenant)
            {
                @if (AddingTenant)
                {
                    <MudCard>
                        <MudCardHeader>
                            <MudCardTitle>Adding New Tenant</MudCardTitle>
                        </MudCardHeader>
                        <MudCardContent>
                            <TenantConfigurationEditor @bind-Tenant="NewTenant"></TenantConfigurationEditor>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Color="Color.Primary" OnClick="async () => await AddTenant()">Save</MudButton>
                            <MudButton Color="Color.Secondary" OnClick="() => NewTenant = new TenantConfiguration()">Clear</MudButton>
                        </MudCardActions>
                    </MudCard>
                }
                
                <MudExpansionPanels MultiExpansion="true">
                    @for (int idx = 0; idx < Tenants.Length; idx++)
                    {
                        var idxLocal = idx;
                        <MudExpansionPanel Class="ma-5"
                                           IsInitiallyExpanded="false">
                            <TitleContent>
                                <div class="d-flex">
                                    <MudIcon Icon="@(TenantBeingEditedId == Tenants[idxLocal].Id ? Icons.Material.Filled.Edit : Icons.Material.Filled.PeopleAlt)"
                                             Class="mr-3"></MudIcon>
                                    <MudText Typo="Typo.h6">@($"{Tenants[idxLocal].TenantName}")</MudText>
                                </div>
                            </TitleContent>
                            <ChildContent>
                                <TenantConfigurationEditor @bind-Tenant="Tenants[idxLocal]" ReadOnly="@(TenantBeingEditedId != Tenants[idxLocal].Id)"></TenantConfigurationEditor>

                                @if (TenantBeingEditedId != Tenants[idxLocal].Id)
                                {
                                    <MudButton Color="Color.Primary"
                                               OnClick="() => TenantBeingEditedId = Tenants[idxLocal].Id">Edit</MudButton>
                                    <MudButton Color="Color.Secondary" OnClick="async () => await DeleteTenant(Tenants[idxLocal])">Delete</MudButton>
                                }
                                else
                                {
                                    // already being edited
                                    <MudButton Color="Color.Primary"
                                               OnClick="async () => await UpdateTenant(Tenants[idxLocal])">Save</MudButton>
                                    <MudButton Color="Color.Secondary" 
                                               OnClick="async () => await ReloadTenants()">Cancel</MudButton>
                                }
                            </ChildContent>

                        </MudExpansionPanel>
                    }
                </MudExpansionPanels>
            }
            else
            {
                <MudAlert Severity="Severity.Info" Class="pa-6">No tenants configured. Please add a new tenant.</MudAlert>
            }
        </MudPaper>
    </MudTabPanel>
</MudTabs>

<MudMessageBox @ref="DeleteTenantMessageBox" 
               Class="pa-6 ma-3"
               Title="Warning" CancelText="Cancel">
    <MessageContent>
        Deleting can <b><i>not</i></b> be undone!
    </MessageContent>
    <YesButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error" StartIcon="@Icons.Material.Filled.DeleteForever">Delete</MudButton>
    </YesButton>
</MudMessageBox>
